from aiogram import types
from aiogram.filters import Command
from aiogram import F
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardRemove

from school_bot.config import DIRECTOR_USERNAME
from school_bot.db.controllers import get_active_assignments, register_user
from school_bot.db.students import is_user_student
from school_bot.db.teachers import is_user_teacher
from school_bot.db.database import get_db_connection
from main import dp


@dp.message(Command("start"))
async def universal_start(message: types.Message):
    user = message.from_user
    
    if not user.username:
        await message.answer("‚ö†Ô∏è –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å username –≤ Telegram.")
        return
    
    async with get_db_connection() as conn:
        is_teacher = await is_user_teacher(user.username, conn)
        is_director = user.username == DIRECTOR_USERNAME
        print(is_teacher, is_director)

        await register_user(conn, user.username, message.chat.id, is_teacher or is_director)
        
        if is_teacher or is_director:
            from school_bot.handlers.teacher import get_teacher_main_menu
            
            role = "–¥–∏—Ä–µ–∫—Ç–æ—Ä–∞" if is_director else "—É—á–∏—Ç–µ–ª—è"
            await message.answer(
                f"üëî <b>–ü–∞–Ω–µ–ª—å {role}</b>\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
                reply_markup=get_teacher_main_menu(is_director=is_director),
                parse_mode="HTML"
            )
            return
        
        # –î–ª—è —É—á–µ–Ω–∏–∫–æ–≤ –ø–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è
        active_assignments = await get_active_assignments(user.username, conn)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É—á–µ–Ω–∏–∫–∞
    welcome_msg = "üë®‚Äçüéì <b>–ü–∞–Ω–µ–ª—å —É—á–µ–Ω–∏–∫–∞</b>\n\n"
    
    if active_assignments:
        welcome_msg += f"üîî –£ –≤–∞—Å {len(active_assignments)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π:\n"
        for i, (_, text, _, assigned_at, _) in enumerate(active_assignments, 1):
            assignment_text = (text[:30] + '...') if len(text) > 30 else text
            welcome_msg += f"{i}. {assignment_text} (–æ—Ç {assigned_at[:10]})\n"
        welcome_msg += "\n"
    
    welcome_msg += "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"
    
    from school_bot.handlers.student import get_student_main_menu
    await message.answer(
        welcome_msg,
        reply_markup=get_student_main_menu(),
        parse_mode="HTML"
    )


@dp.message(F.text == "üîÑ –û–±–Ω–æ–≤–∏—Ç—å")
async def student_refresh_menu(message: types.Message):
    await universal_start(message)


async def get_user_menu(username: str) -> types.ReplyKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    —Å —É—á–µ—Ç–æ–º –µ–≥–æ —Ä–æ–ª–∏ (–¥–∏—Ä–µ–∫—Ç–æ—Ä, —É—á–∏—Ç–µ–ª—å, —É—á–µ–Ω–∏–∫)
    
    Args:
        username: Telegram username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ @)
        
    Returns:
        ReplyKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é –∏–ª–∏ ReplyKeyboardRemove()
    """
    if not username:
        return types.ReplyKeyboardRemove()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ (—Å–∞–º—ã–π —á–∞—Å—Ç—ã–π —Å–ª—É—á–∞–π)
    if username == DIRECTOR_USERNAME:
        from school_bot.handlers.teacher import get_teacher_main_menu
        return get_teacher_main_menu(is_director=True)
    
    async with get_db_connection() as conn:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á–∏—Ç–µ–ª—è (–≤–∫–ª—é—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞)
        is_teacher = await is_user_teacher(username, conn)
        if is_teacher:
            from school_bot.handlers.teacher import get_teacher_main_menu
            return get_teacher_main_menu(is_director=False)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á–µ–Ω–∏–∫–∞
        is_student = await is_user_student(username, conn)
        if is_student:
            from school_bot.handlers.student import get_student_main_menu
            return get_student_main_menu()
    
    return types.ReplyKeyboardRemove()


@dp.message(F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
async def universal_cancel_action(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        reply_markup=await get_user_menu(str(message.from_user.username))
    )